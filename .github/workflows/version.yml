name: Versioning and Tagging

on:
  push:
    branches: [main]

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract base version
        id: get_base
        run: |
          content=$(<Expedition/version.py)
          if [[ "$content" =~ __version__\ *=\ *\"([0-9]+)\.([0-9]+)\.[0-9]+\" ]]; then
            base="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}"
            echo "base_version=$base" >> $GITHUB_ENV
            echo "Base version extracted: $base" >&2
          else
            echo "Could not extract base version" >&2
            exit 1
          fi

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get next version tag
        id: get_version
        run: |
          base="${{ env.base_version }}"
          tags=$(git tag --sort=-v:refname | grep "^v$base\.[0-9]\+$" || true)
          if [ -z "$tags" ]; then
            echo "No tags found for base version $base" >&2
            patch=0
          else
            latest=$(echo "$tags" | head -n1)
            echo "latest_tag=$latest" >> $GITHUB_ENV
            patch=$(( ${latest##*.} + 1 ))
          fi
          next="v$base.$patch"
          echo "next_version=$next" >> $GITHUB_ENV
          echo "tag_name=$next" >> $GITHUB_OUTPUT

      - name: Write final version into version.py
        run: |
          version=${{ env.next_version }}
          version=${version#v}  # remove leading 'v'
          echo "__version__ = \"$version\"" > Expedition/version.py

      - name: Commit version change and create tag
        run: |
          git config --global user.email "github-actions@github.com"  # Set the email for GitHub Actions bot
          git config --global user.name "GitHub Actions"  # Set the name for GitHub Actions bot
          git add Expedition/version.py
          git commit -m "Bump version to ${{ env.next_version }}"
          git tag ${{ env.next_version }}
          git push origin main --tags
